{
	"info": {
		"_postman_id": "ad991fa6-0be6-4a16-96f7-9184d4b6408d",
		"name": "Petstore Order Advanced",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23355365"
	},
	"item": [
		{
			"name": "Positive tests",
			"item": [
				{
					"name": "Place Order for a Pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Time is less than 0.5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Size is less than 1KB\", function () {\r",
									"    pm.expect(pm.response.responseSize).to.be.below(1024);\r",
									"});\r",
									"\r",
									"pm.test(\"Header is correct\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"    pm.response.to.have.header(\"Transfer-Encoding\", \"chunked\");\r",
									"    pm.response.to.have.header(\"Connection\", \"keep-alive\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Origin\", \"*\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Methods\", \"GET, POST, DELETE, PUT\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Headers\", \"Content-Type, api_key, Authorization\");\r",
									"    pm.response.to.have.header(\"Server\", \"Jetty(9.2.9.v20150224)\");\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"ID is correct \", function () {\r",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"ID\"));\r",
									"pm.test(\"PetID is correct \", function () {\r",
									"    pm.expect(jsonData.petId).to.eql(pm.environment.get(\"PETID\"));\r",
									"    });\r",
									"    pm.test(\"Quantity is correct \", function () {\r",
									"    pm.expect(jsonData.quantity).to.eql(pm.environment.get(\"QTY\"));\r",
									"    });\r",
									"    pm.test(\"Status is correct \", function () {\r",
									"    pm.expect(jsonData.status).to.eql(pm.environment.get(\"STATUS\"));\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.clear()",
									"pm.environment.set(\"ID\", Math.floor(Math.random() * 101));",
									"pm.environment.set(\"PETID\", Math.floor(Math.random() * 101));",
									"pm.environment.set(\"QTY\", Math.floor(Math.random() * 101));",
									"",
									"pm.environment.set(\"SHIPDATE\", new Date());",
									"",
									"let statusPick = [\"placed\", \"approved\", \"delivered\"];",
									"let randomStatus = statusPick[Math.floor(Math.random() * statusPick.length)];",
									"pm.environment.set(\"STATUS\", randomStatus);",
									"",
									"let completePick = [true, false];",
									"let randomComplete = completePick[Math.floor(Math.random() * completePick.length)];",
									"pm.environment.set(\"COMPLETE\", randomComplete);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{ID}},\r\n    \"petId\": {{PETID}},\r\n    \"quantity\": {{QTY}},\r\n    \"shipDate\": \"{{SHIPDATE}}\",\r\n    \"status\": \"{{STATUS}}\",\r\n    \"complete\": {{COMPLETE}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find purchase order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Time is less than 1s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Size is less than 1KB\", function () {\r",
									"    pm.expect(pm.response.responseSize).to.be.below(1024);\r",
									"});\r",
									"\r",
									"pm.test(\"Header is correct\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"    pm.response.to.have.header(\"Transfer-Encoding\", \"chunked\");\r",
									"    pm.response.to.have.header(\"Connection\", \"keep-alive\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Origin\", \"*\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Methods\", \"GET, POST, DELETE, PUT\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Headers\", \"Content-Type, api_key, Authorization\");\r",
									"    pm.response.to.have.header(\"Server\", \"Jetty(9.2.9.v20150224)\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body contains KEYS\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"petId\");\r",
									"    pm.expect(pm.response.text()).to.include(\"quantity\");\r",
									"    pm.expect(pm.response.text()).to.include(\"shipDate\");\r",
									"    pm.expect(pm.response.text()).to.include(\"status\");\r",
									"    pm.expect(pm.response.text()).to.include(\"complete\");\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"ID is correct \", function () {\r",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"ID\"));\r",
									"pm.test(\"PetID is correct \", function () {\r",
									"    pm.expect(jsonData.petId).to.eql(pm.environment.get(\"PETID\"));\r",
									"    });\r",
									"    pm.test(\"Quantity is correct \", function () {\r",
									"    pm.expect(jsonData.quantity).to.eql(pm.environment.get(\"QTY\"));\r",
									"    });\r",
									"    pm.test(\"Status is correct \", function () {\r",
									"    pm.expect(jsonData.status).to.eql(pm.environment.get(\"STATUS\"));\r",
									"    });\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order/{{ID}}",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order",
								"{{ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete purchase order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Time is less than 0.5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Size is less than 1KB\", function () {\r",
									"    pm.expect(pm.response.responseSize).to.be.below(1024);\r",
									"});\r",
									"\r",
									"pm.test(\"Header is correct\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"    pm.response.to.have.header(\"Transfer-Encoding\", \"chunked\");\r",
									"    pm.response.to.have.header(\"Connection\", \"keep-alive\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Origin\", \"*\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Methods\", \"GET, POST, DELETE, PUT\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Headers\", \"Content-Type, api_key, Authorization\");\r",
									"    pm.response.to.have.header(\"Server\", \"Jetty(9.2.9.v20150224)\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body contains KEYS\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"code\");\r",
									"    pm.expect(pm.response.text()).to.include(\"type\");\r",
									"    pm.expect(pm.response.text()).to.include(\"message\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response Body KEY/VALUE is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"    pm.expect(jsonData.type).to.eql(\"unknown\");\r",
									"    pm.expect(jsonData.message).to.eql(\"\" + pm.environment.get(\"ID\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Body contains correct Values\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(200);\r",
									"    pm.expect(pm.response.text()).to.include(\"unknown\");\r",
									"    pm.expect(pm.response.text()).to.include(\"2\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order/{{ID}}",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order",
								"{{ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Confirm deleted order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.not.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Time is less than 0.5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Size is less than 1KB\", function () {\r",
									"    pm.expect(pm.response.responseSize).to.be.below(1024);\r",
									"});\r",
									"\r",
									"pm.test(\"Header is correct\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"    pm.response.to.have.header(\"Transfer-Encoding\", \"chunked\");\r",
									"    pm.response.to.have.header(\"Connection\", \"keep-alive\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Origin\", \"*\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Methods\", \"GET, POST, DELETE, PUT\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Headers\", \"Content-Type, api_key, Authorization\");\r",
									"    pm.response.to.have.header(\"Server\", \"Jetty(9.2.9.v20150224)\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body contains KEYS\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"code\");\r",
									"    pm.expect(pm.response.text()).to.include(\"type\");\r",
									"    pm.expect(pm.response.text()).to.include(\"message\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response Body KEY/VALUE is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(404);\r",
									"    pm.expect(jsonData.type).to.eql(\"unknown\");\r",
									"    pm.expect(jsonData.message).to.not.eql(\"\" + pm.environment.get(\"ID\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Body contains correct Values\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(404);\r",
									"    pm.expect(pm.response.text()).to.include(\"unknown\");\r",
									"    pm.expect(pm.response.text()).to.include(\"Order Not Found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order/{{ID}}",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order",
								"{{ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check specific deleted order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.not.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Time is less than 0.5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Size is less than 1KB\", function () {\r",
									"    pm.expect(pm.response.responseSize).to.be.below(1024);\r",
									"});\r",
									"\r",
									"pm.test(\"Header is correct\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"    pm.response.to.have.header(\"Transfer-Encoding\", \"chunked\");\r",
									"    pm.response.to.have.header(\"Connection\", \"keep-alive\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Origin\", \"*\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Methods\", \"GET, POST, DELETE, PUT\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Headers\", \"Content-Type, api_key, Authorization\");\r",
									"    pm.response.to.have.header(\"Server\", \"Jetty(9.2.9.v20150224)\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body contains KEYS\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"code\");\r",
									"    pm.expect(pm.response.text()).to.include(\"type\");\r",
									"    pm.expect(pm.response.text()).to.include(\"message\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response Body KEY/VALUE is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(1);\r",
									"    pm.expect(jsonData.type).to.eql(\"error\");\r",
									"    pm.expect(jsonData.message).to.not.eql(\"\" + pm.environment.get(\"ID\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Body contains correct Values\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(1);\r",
									"    pm.expect(pm.response.text()).to.include(\"error\");\r",
									"    pm.expect(pm.response.text()).to.include(\"Order not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order/{{ID}}",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order",
								"{{ID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Negative tests",
			"item": [
				{
					"name": "Place Order for a Pet - Negative ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is NOT 200\", function () {\r",
									"    pm.response.to.not.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Time is less than 0.5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Size is less than 1KB\", function () {\r",
									"    pm.expect(pm.response.responseSize).to.be.below(1024);\r",
									"});\r",
									"\r",
									"pm.test(\"Header is correct\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"    pm.response.to.have.header(\"Transfer-Encoding\", \"chunked\");\r",
									"    pm.response.to.have.header(\"Connection\", \"keep-alive\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Origin\", \"*\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Methods\", \"GET, POST, DELETE, PUT\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Headers\", \"Content-Type, api_key, Authorization\");\r",
									"    pm.response.to.have.header(\"Server\", \"Jetty(9.2.9.v20150224)\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body contains KEYS\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"code\");\r",
									"    pm.expect(pm.response.text()).to.include(\"type\");\r",
									"    pm.expect(pm.response.text()).to.include(\"message\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body contains correct Values\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(400);\r",
									"    pm.expect(pm.response.text()).to.include(\"unknown\");\r",
									"    pm.expect(pm.response.text()).to.include(\"bad input\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response Body KEY/VALUE is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(400);\r",
									"    pm.expect(jsonData.type).to.eql(\"unknown\");\r",
									"    pm.expect(jsonData.message).to.eql(\"bad input\");\r",
									"});\r",
									"\r",
									"pm.test(\"Correct response code\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 402]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": -2,\r\n    \"petId\": 77,\r\n    \"quantity\": 777,\r\n    \"shipDate\": \"2022-09-10T01:46:30.316Z\",\r\n    \"status\": \"placed\",\r\n    \"complete\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find purchase order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Time is less than 0.5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Size is less than 1KB\", function () {\r",
									"    pm.expect(pm.response.responseSize).to.be.below(1024);\r",
									"});\r",
									"\r",
									"pm.test(\"Header is correct\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"    pm.response.to.have.header(\"Transfer-Encoding\", \"chunked\");\r",
									"    pm.response.to.have.header(\"Connection\", \"keep-alive\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Origin\", \"*\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Methods\", \"GET, POST, DELETE, PUT\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Headers\", \"Content-Type, api_key, Authorization\");\r",
									"    pm.response.to.have.header(\"Server\", \"Jetty(9.2.9.v20150224)\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body contains KEYS\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"petId\");\r",
									"    pm.expect(pm.response.text()).to.include(\"quantity\");\r",
									"    pm.expect(pm.response.text()).to.include(\"shipDate\");\r",
									"    pm.expect(pm.response.text()).to.include(\"status\");\r",
									"    pm.expect(pm.response.text()).to.include(\"complete\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response Body KEY/VALUE is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(2);\r",
									"    pm.expect(jsonData.petId).to.eql(77);\r",
									"    pm.expect(jsonData.quantity).to.eql(777);\r",
									"    pm.expect(jsonData.status).to.eql(\"placed\");\r",
									"    pm.expect(jsonData.complete).to.eql(false);\r",
									"});\r",
									"\r",
									"pm.test(\"Body contains correct Values\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(2);\r",
									"    pm.expect(pm.response.text()).to.include(77);\r",
									"    pm.expect(pm.response.text()).to.include(777);\r",
									"    pm.expect(pm.response.text()).to.include(\"2022-09-10T01:46:30.316+0000\");\r",
									"    pm.expect(pm.response.text()).to.include(\"placed\");\r",
									"    pm.expect(pm.response.text()).to.include(false);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order/-2",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order",
								"-2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete purchase order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Time is less than 0.5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Size is less than 1KB\", function () {\r",
									"    pm.expect(pm.response.responseSize).to.be.below(1024);\r",
									"});\r",
									"\r",
									"pm.test(\"Header is correct\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"    pm.response.to.have.header(\"Transfer-Encoding\", \"chunked\");\r",
									"    pm.response.to.have.header(\"Connection\", \"keep-alive\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Origin\", \"*\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Methods\", \"GET, POST, DELETE, PUT\");\r",
									"    pm.response.to.have.header(\"Access-Control-Allow-Headers\", \"Content-Type, api_key, Authorization\");\r",
									"    pm.response.to.have.header(\"Server\", \"Jetty(9.2.9.v20150224)\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body contains KEYS\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"code\");\r",
									"    pm.expect(pm.response.text()).to.include(\"type\");\r",
									"    pm.expect(pm.response.text()).to.include(\"message\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response Body KEY/VALUE is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"    pm.expect(jsonData.type).to.eql(\"unknown\");\r",
									"    pm.expect(jsonData.message).to.eql(\"2\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body contains correct Values\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(200);\r",
									"    pm.expect(pm.response.text()).to.include(\"unknown\");\r",
									"    pm.expect(pm.response.text()).to.include(\"2\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order/2",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order",
								"2"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}